//! Defines some traits for JIT compilation of the IR for [cranelift] and [llvm].

use thiserror::Error;

use crate::specialize::tree::Term;

pub mod llvm;

pub type Result<T> = std::result::Result<T, BackendError>;

/// An error generated by the parser.
#[derive(Error, Debug)]
pub enum BackendError {
    #[error("cannot init backend")]
    CannotInitRuntime,
}

pub trait Runnable {
    fn run(&self);
}

pub struct Config {}

pub trait Backend<'a> {
    type Object: Runnable;
    type Config;

    fn new(config: &'a Self::Config) -> Self;
    fn compile(&'a self, terms: Vec<Term<'a>>) -> Result<Self::Object>;
}
